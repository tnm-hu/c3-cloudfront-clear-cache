name: Test plugin
on: [workflow_dispatch]

jobs:
  tag:
    name: PHP ${{ matrix.php }} / WP ${{ matrix.wp }} Test
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      matrix:
        include:
          - php: 7.4
            wp: latest
    steps:
      - name: Get current TS
        id: unixtime
        run: echo "::set-output name=unixtime::$(date +'%s')"
      - name: Checkout
        uses: actions/checkout@master
      - name: PHP ${{ matrix.php }} / WP ${{ matrix.wp }} Test
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl , mysqli
          ini-values: post_max_size=256M, short_open_tag=On #optional, setup php.ini configuration
          coverage: xdebug #optional, setup coverage driver

      - name: Check PHP Version
        run: php -v

      - name: Install phpunit global
        run: |
          composer global require "phpunit/phpunit=7.*.*|8.*.*"
          phpunit --version

      - name: Cache composer packages
        uses: actions/cache@v2
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}

      - name: Composer install
        run: |
          composer install --optimize-autoloader --prefer-dist
          composer fund

      - name: Coding Style check
        run: composer lint

      - name: Zip all files
        run: zip -r /tmp/c3-cloudfront-clear-cache-${{ steps.unixtime.outputs.unixtime }}.zip *

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GI_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: /tmp/c3-cloudfront-clear-cache-${{ steps.unixtime.outputs.unixtime }}.zip
          asset_name: c3-cloudfront-clear-cache-${{ github.ref }}.zip
          asset_content_type: application/zip

      # - name: Install WP Tests
      #   run: bash bin/install-wp-tests.sh wordpress_test root root 127.0.0.1 ${{ matrix.wp }} true
